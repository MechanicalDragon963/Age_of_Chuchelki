#textdomain wesnoth-AoDH

#define CHUCHELKI_TRAITS VALUE 
num_traits=value 
ignore_race_traits=yes
{TRAIT_RESILIENT}
{TRAIT_HEALTHY}
{TRAIT_STRONG}
{TRAIT_QUICK}
#enddef

#define STEPPE_STACKING_DUMMY_SPECIAL NAME DAMAGE
    [damage]
        id=steppe_stacking{NAME}{DAMAGE}
        name={NAME}+" +{DAMAGE}"
        description=_"When this attack is used, its damage increases by"+" {DAMAGE} "+"after each successful hit. After the unit stops attacking, the damage resets to normal."
    [/damage]
#enddef

#events are seperate, in case I need to add the ability via amla
#define STEPPE_STACKING_EVENTS NAME DAMAGE
[event]
    name=attack
    id=steppe_stacking_event1{NAME}{DAMAGE}
    first_time_only=no
    [filter_attack]
        special_id=steppe_stacking{NAME}{DAMAGE}
    [/filter_attack]

    {VARIABLE tmp_stacking_dmgbonus 0}
[/event]

[event]
    name=attacker_hits
    first_time_only=no
    id=steppe_stacking_event2
    [filter_attack]
        special_id=steppe_stacking{NAME}{DAMAGE}
    [/filter_attack]

    {VARIABLE_OP tmp_stacking_dmgbonus add 1}

    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=steppe_stacking{NAME}{DAMAGE}
            increase_damage=1
        [/effect]
    [/object]
[/event]

[event]
    name=attack end
    id=steppe_stacking_event3
    first_time_only=no
    [filter_attack]
        special_id=steppe_stacking{NAME}{DAMAGE}
    [/filter_attack]

#reset the damage
    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=steppe_stacking{NAME}{DAMAGE}
            increase_damage=-$tmp_stacking_dmgbonus
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_stacking_dmgbonus}
[/event]

[event]
    name=attack
    id=steppe_stacking_event12{NAME}{DAMAGE}
    first_time_only=no
    [filter_second_attack]
        special_id=steppe_stacking{NAME}{DAMAGE}
    [/filter_second_attack]

    {VARIABLE tmp_stacking_dmgbonus2 0}
[/event]

[event]
    name=defender_hits
    first_time_only=no
    id=steppe_stacking_event22
    [filter_second_attack]
        special_id=steppe_stacking{NAME}{DAMAGE}
    [/filter_second_attack]

    {VARIABLE_OP tmp_stacking_dmgbonus2 add 1}

    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=second_unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=steppe_stacking{NAME}{DAMAGE}
            increase_damage=1
        [/effect]
    [/object]
[/event]

[event]
    name=attack end
    id=steppe_stacking_event32
    first_time_only=no
    [filter_second_attack]
        special_id=steppe_stacking{NAME}{DAMAGE}
    [/filter_second_attack]

#reset the damage
    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=second_unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=steppe_stacking{NAME}{DAMAGE}
            increase_damage=-$tmp_stacking_dmgbonus2
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_stacking_dmgbonus2}
[/event]
#enddef

#define WEAPON_SPECIAL_STEPPE_STACKING NAME DAMAGE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    {STEPPE_STACKING_DUMMY_SPECIAL {NAME} {DAMAGE}}
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
{STEPPE_STACKING_EVENTS {NAME} {DAMAGE}}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef